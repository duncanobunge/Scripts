use openmrs;
SET @Start_Date='2022-04-01' ;
SET @End_Date = '2022-04-30' ;
select
fup.patient_id,
de.unique_patient_no,
de.DOB,
de.Gender,
de.marital_status,
de.education_level,
max(fup.visit_date) as visit_date,
fup.visit_scheduled,
fup.person_present,
mid(max(concat(fup.visit_date, fup.height)), 11) as height,
mid(max(concat(fup.visit_date, fup.weight)), 11) as weight,
mid(max(concat(fup.visit_date, fup.systolic_pressure)), 11) as systolic_pressure,
mid(max(concat(fup.visit_date, fup.diastolic_pressure)), 11) as diastolic_pressure,
mid(max(concat(fup.visit_date, fup.temperature)), 11) as temperature,
mid(max(concat(fup.visit_date, fup.pulse_rate)), 11) as pulse_rate,
mid(max(concat(fup.visit_date, fup.respiratory_rate)), 11) as respiratory_rate,
mid(max(concat(fup.visit_date, fup.oxygen_saturation)), 11) as oxygen_saturation,
mid(max(concat(fup.visit_date, fup.muac)), 11) as muac,
mid(max(concat(fup.visit_date, fup.nutritional_status)), 11) as nutritional_status,
mid(max(concat(fup.visit_date, fup.population_type)), 11) as population_type,
mid(max(concat(fup.visit_date, fup.key_population_type)), 11) as key_population_type,
mid(max(concat(fup.visit_date, fup.who_stage)), 11) as who_stage,
mid(max(concat(fup.visit_date, fup.presenting_complaints)), 11) as presenting_complaints,
mid(max(concat(fup.visit_date, fup.clinical_notes)), 11) as clinical_notes,
mid(max(concat(fup.visit_date, fup.on_ipt)), 11) as on_ipt,
mid(max(concat(fup.visit_date, fup.ever_on_ipt)), 11) as ever_on_ipt,
mid(max(concat(fup.visit_date, fup.screened_for_tb)), 11) as screened_for_tb,
mid(max(concat(fup.visit_date, fup.has_known_allergies)), 11) as has_known_allergies,
mid(max(concat(fup.visit_date, fup.pregnancy_status)), 11) as pregnancy_status,
mid(max(concat(fup.visit_date, fup.breastfeeding)), 11) as breastfeeding,
mid(max(concat(fup.visit_date, fup.wants_pregnancy)), 11) as want_pregnancy,
max(fup.expected_delivery_date) as expected_delivery_date,
mid(max(concat(fup.visit_date, fup.ever_had_menses)), 11) as ever_had_menses,
mid(max(concat(fup.visit_date, fup.last_menstrual_period)), 11) as last_menstrual_period,
mid(max(concat(fup.visit_date, fup.family_planning_status)), 11) as family_planning_status,
mid(max(concat(fup.visit_date, fup.reason_not_using_family_planning)), 11) as reason_not_using_family_planning,
mid(max(concat(fup.visit_date, fup.system_examination)), 11) as system_examination,
mid(max(concat(fup.visit_date, fup.prophylaxis_given)), 11) as prophylaxis_given,
mid(max(concat(fup.visit_date, fup.ctx_dispensed)), 11) as ctx_dispensed,
mid(max(concat(fup.visit_date, fup.arv_adherence)), 11) as arv_adherence,
mid(max(concat(fup.visit_date, fup.pwp_disclosure)), 11) as pwp_disclosure,
mid(max(concat(fup.visit_date, fup.pwp_partner_tested)), 11) as pwp_partner_tested,
mid(max(concat(fup.visit_date, fup.condom_provided)), 11) as condom_provided,
mid(max(concat(fup.visit_date, fup.substance_abuse_screening)), 11) as substance_abuse_screening,
mid(max(concat(fup.visit_date, fup.screened_for_sti)), 11) as screened_for_sti,
mid(max(concat(fup.visit_date, fup.cacx_screening)), 11) as cacx_screening,
mid(max(concat(fup.visit_date, fup.sti_partner_notification)), 11) as sti_partner_notification,
mid(max(concat(fup.visit_date, fup.system_review_finding)), 11) as system_review_finding,
mid(max(concat(fup.visit_date, fup.stability)), 11) as stability,
mid(max(concat(fup.visit_date, fup.next_appointment_date)), 11) as next_appointment_date,
mid(max(concat(fup.visit_date, fup.next_appointment_reason)), 11) as next_appointment_reason,
mid(max(concat(fup.visit_date, fup.refill_date)), 11) as refill_date,
mid(max(concat(fup.visit_date, fup.differentiated_care)), 11) as differentiated_care,
u.username
from kenyaemr_etl.etl_patient_hiv_followup fup
inner join kenyaemr_etl.etl_patient_demographics de ON fup.patient_id=de.patient_id
inner join openmrs.users u ON fup.encounter_provider=u.user_id
group by fup.patient_id
having max(fup.visit_date) between @Start_Date and @End_Date;

